{
"openapi": "3.0.1",
"info": {
"title": "MANSAR REMITA Documentation",
"description": "API Documentation",
"version": "1.0"
},
"servers": [
{
"url": "http://localhost:9003",
"description": "Generated server url"
}
],
"paths": {
"/api/intern/users/{id}": {
"get": {
"tags": [
"user-controller"
],
"summary": "Get an entity by ID",
"description": "Fetch an entity from the system using its ID",
"operationId": "getById",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "Entity found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
}
}
},
"put": {
"tags": [
"user-controller"
],
"summary": "Update an existing entity",
"description": "Update an entity using its ID",
"operationId": "update",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity updated successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
}
}
},
"delete": {
"tags": [
"user-controller"
],
"summary": "Delete an entity by ID",
"description": "Delete an entity from the system using its ID",
"operationId": "deleteById",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"204": {
"description": "Entity deleted successfully"
},
"404": {
"description": "Entity not found"
}
}
}
},
"/api/intern/users/softdelete/{id}": {
"put": {
"tags": [
"user-controller"
],
"summary": "Soft delete an existing entity",
"description": "Soft delete an entity using its ID",
"operationId": "softdelete",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity Soft delete successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
}
}
}
},
"/api/intern/user-verification/{id}": {
"get": {
"tags": [
"user-verification-controller"
],
"summary": "Get an entity by ID",
"description": "Fetch an entity from the system using its ID",
"operationId": "getById_1",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "Entity found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserVerificationDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserVerificationDto"
}
}
}
}
}
},
"put": {
"tags": [
"user-verification-controller"
],
"summary": "Update an existing entity",
"description": "Update an entity using its ID",
"operationId": "update_1",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserVerificationRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity updated successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserVerificationDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserVerificationDto"
}
}
}
}
}
},
"delete": {
"tags": [
"user-verification-controller"
],
"summary": "Delete an entity by ID",
"description": "Delete an entity from the system using its ID",
"operationId": "deleteById_1",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"204": {
"description": "Entity deleted successfully"
},
"404": {
"description": "Entity not found"
}
}
}
},
"/api/intern/user-verification/update": {
"put": {
"tags": [
"user-verification-controller"
],
"summary": "Update User Verification",
"description": "Here you can update an User Verification",
"operationId": "updateUserVerification",
"parameters": [
{
"name": "documentType",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"CNI",
"PASSPORT",
"DRIVER_LICENCE",
"SELFIE",
"GOVERNMENT_ID",
"PROOF_OF_ADDRESS",
"TAX_ID",
"RENTAL_AGREEMENT",
"BUSINESS_PROOF_OF_ADDRESS",
"BUSINESS_REGISTRATION",
"PERSONA_VERIFICATION",
"TAX_COMPLIANCE_CERTIFICATE",
"GOVERNMENT_BUSINESS_ID"
]
}
},
{
"name": "statusKycDocuments",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"PENDING_REVIEW",
"INVALID",
"APPROVED",
"RECEIVED_BACK"
]
}
},
{
"name": "userId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"required": [
"file"
],
"type": "object",
"properties": {
"file": {
"type": "string",
"format": "binary"
}
}
}
},
"multipart/form-data": {
"schema": {
"required": [
"file"
],
"type": "object",
"properties": {
"file": {
"type": "string",
"format": "binary"
}
}
}
}
}
},
"responses": {
"201": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/user-verification/softdelete/{id}": {
"put": {
"tags": [
"user-verification-controller"
],
"summary": "Soft delete an existing entity",
"description": "Soft delete an entity using its ID",
"operationId": "softdelete_1",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserVerificationRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity Soft delete successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserVerificationDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserVerificationDto"
}
}
}
}
}
}
},
"/api/intern/user-verification/changeUserStatus": {
"put": {
"tags": [
"user-verification-controller"
],
"summary": "Change user status",
"description": "Change user status",
"operationId": "changeUserStatus",
"parameters": [
{
"name": "userId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "status",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"ACTIVE",
"INITIALIZE",
"BLOCK"
]
}
}
],
"responses": {
"200": {
"description": "Successfully retrieve users",
"content": {
"application/json": {
"schema": {
"type": "object"
}
}
}
},
"500": {
"description": "Internal server error",
"content": {
"application/json": {
"schema": {
"type": "object"
}
}
}
}
}
}
},
"/api/intern/user-verification/change-status-document": {
"put": {
"tags": [
"user-verification-controller"
],
"summary": "Change Status User Verification",
"description": "Here you can change an User Verification",
"operationId": "changeStatusUserVerification",
"parameters": [
{
"name": "verifId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "userId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "statusKycDocuments",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"PENDING_REVIEW",
"INVALID",
"APPROVED",
"RECEIVED_BACK"
]
}
},
{
"name": "documentKyc",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"CNI",
"PASSPORT",
"DRIVER_LICENCE",
"SELFIE",
"GOVERNMENT_ID",
"PROOF_OF_ADDRESS",
"TAX_ID",
"RENTAL_AGREEMENT",
"BUSINESS_PROOF_OF_ADDRESS",
"BUSINESS_REGISTRATION",
"PERSONA_VERIFICATION",
"TAX_COMPLIANCE_CERTIFICATE",
"GOVERNMENT_BUSINESS_ID"
]
}
}
],
"responses": {
"201": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/{id}": {
"get": {
"tags": [
"transaction-controller"
],
"summary": "Get an entity by ID",
"description": "Fetch an entity from the system using its ID",
"operationId": "getById_2",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "Entity found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
}
}
},
"put": {
"tags": [
"transaction-controller"
],
"summary": "Update an existing entity",
"description": "Update an entity using its ID",
"operationId": "update_2",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity updated successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
}
}
},
"delete": {
"tags": [
"transaction-controller"
],
"summary": "Delete an entity by ID",
"description": "Delete an entity from the system using its ID",
"operationId": "deleteById_2",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"204": {
"description": "Entity deleted successfully"
},
"404": {
"description": "Entity not found"
}
}
}
},
"/api/intern/transaction/softdelete/{id}": {
"put": {
"tags": [
"transaction-controller"
],
"summary": "Soft delete an existing entity",
"description": "Soft delete an entity using its ID",
"operationId": "softdelete_2",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity Soft delete successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
}
}
}
},
"/api/intern/tickets/{id}": {
"get": {
"tags": [
"ticket-controller"
],
"summary": "Get an entity by ID",
"description": "Fetch an entity from the system using its ID",
"operationId": "getById_3",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "Entity found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TicketDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TicketDto"
}
}
}
}
}
},
"put": {
"tags": [
"ticket-controller"
],
"summary": "Update an existing entity",
"description": "Update an entity using its ID",
"operationId": "update_3",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TicketRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity updated successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TicketDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TicketDto"
}
}
}
}
}
},
"delete": {
"tags": [
"ticket-controller"
],
"summary": "Delete an entity by ID",
"description": "Delete an entity from the system using its ID",
"operationId": "deleteById_3",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"204": {
"description": "Entity deleted successfully"
},
"404": {
"description": "Entity not found"
}
}
}
},
"/api/intern/tickets/softdelete/{id}": {
"put": {
"tags": [
"ticket-controller"
],
"summary": "Soft delete an existing entity",
"description": "Soft delete an entity using its ID",
"operationId": "softdelete_3",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TicketRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity Soft delete successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TicketDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TicketDto"
}
}
}
}
}
}
},
"/api/intern/system-fees/{id}": {
"get": {
"tags": [
"system-fees-controller"
],
"summary": "Get an entity by ID",
"description": "Fetch an entity from the system using its ID",
"operationId": "getById_4",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "Entity found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SystemFeesDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SystemFeesDto"
}
}
}
}
}
},
"put": {
"tags": [
"system-fees-controller"
],
"summary": "Update an existing entity",
"description": "Update an entity using its ID",
"operationId": "update_4",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SystemFeesRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity updated successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SystemFeesDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SystemFeesDto"
}
}
}
}
}
},
"delete": {
"tags": [
"system-fees-controller"
],
"summary": "Delete an entity by ID",
"description": "Delete an entity from the system using its ID",
"operationId": "deleteById_4",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"204": {
"description": "Entity deleted successfully"
},
"404": {
"description": "Entity not found"
}
}
}
},
"/api/intern/system-fees/softdelete/{id}": {
"put": {
"tags": [
"system-fees-controller"
],
"summary": "Soft delete an existing entity",
"description": "Soft delete an entity using its ID",
"operationId": "softdelete_4",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SystemFeesRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity Soft delete successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SystemFeesDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SystemFeesDto"
}
}
}
}
}
}
},
"/api/intern/requestOfWithdrawal/{id}": {
"get": {
"tags": [
"request-of-withdrawal-controller"
],
"summary": "Get an entity by ID",
"description": "Fetch an entity from the system using its ID",
"operationId": "getById_5",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "Entity found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/RequestWithdrawalDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/RequestWithdrawalDto"
}
}
}
}
}
},
"put": {
"tags": [
"request-of-withdrawal-controller"
],
"summary": "Update an existing entity",
"description": "Update an entity using its ID",
"operationId": "update_5",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/RequestWithdrawalRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity updated successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/RequestWithdrawalDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/RequestWithdrawalDto"
}
}
}
}
}
},
"delete": {
"tags": [
"request-of-withdrawal-controller"
],
"summary": "Delete an entity by ID",
"description": "Delete an entity from the system using its ID",
"operationId": "deleteById_5",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"204": {
"description": "Entity deleted successfully"
},
"404": {
"description": "Entity not found"
}
}
}
},
"/api/intern/requestOfWithdrawal/softdelete/{id}": {
"put": {
"tags": [
"request-of-withdrawal-controller"
],
"summary": "Soft delete an existing entity",
"description": "Soft delete an entity using its ID",
"operationId": "softdelete_5",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/RequestWithdrawalRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity Soft delete successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/RequestWithdrawalDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/RequestWithdrawalDto"
}
}
}
}
}
}
},
"/api/intern/proofOfTransfer/{id}": {
"get": {
"tags": [
"proof-of-transfer-controller"
],
"summary": "Get an entity by ID",
"description": "Fetch an entity from the system using its ID",
"operationId": "getById_6",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "Entity found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ProofOfTransferDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ProofOfTransferDto"
}
}
}
}
}
},
"put": {
"tags": [
"proof-of-transfer-controller"
],
"summary": "Update an existing entity",
"description": "Update an entity using its ID",
"operationId": "update_6",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ProofOfTransferRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity updated successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ProofOfTransferDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ProofOfTransferDto"
}
}
}
}
}
},
"delete": {
"tags": [
"proof-of-transfer-controller"
],
"summary": "Delete an entity by ID",
"description": "Delete an entity from the system using its ID",
"operationId": "deleteById_6",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"204": {
"description": "Entity deleted successfully"
},
"404": {
"description": "Entity not found"
}
}
}
},
"/api/intern/proofOfTransfer/softdelete/{id}": {
"put": {
"tags": [
"proof-of-transfer-controller"
],
"summary": "Soft delete an existing entity",
"description": "Soft delete an entity using its ID",
"operationId": "softdelete_6",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ProofOfTransferRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity Soft delete successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ProofOfTransferDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ProofOfTransferDto"
}
}
}
}
}
}
},
"/api/intern/organisation-profile/{id}": {
"get": {
"tags": [
"organisation-profil-controller"
],
"summary": "Get an entity by ID",
"description": "Fetch an entity from the system using its ID",
"operationId": "getById_7",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "Entity found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
}
}
},
"put": {
"tags": [
"organisation-profil-controller"
],
"summary": "Update an existing entity",
"description": "Update an entity using its ID",
"operationId": "update_7",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/OrgProfileRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity updated successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
}
}
},
"delete": {
"tags": [
"organisation-profil-controller"
],
"summary": "Delete an entity by ID",
"description": "Delete an entity from the system using its ID",
"operationId": "deleteById_7",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"204": {
"description": "Entity deleted successfully"
},
"404": {
"description": "Entity not found"
}
}
}
},
"/api/intern/organisation-profile/update": {
"put": {
"tags": [
"organisation-profil-controller"
],
"summary": "Update Organisation Profile",
"description": "Here you can update an organisation profile by passing profile parameters",
"operationId": "updateOrganisationProfile",
"parameters": [
{
"name": "name",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "type",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "city",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "country",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "email",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "userId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"required": [
"logo"
],
"type": "object",
"properties": {
"logo": {
"type": "string",
"format": "binary"
}
}
}
},
"multipart/form-data": {
"schema": {
"required": [
"logo"
],
"type": "object",
"properties": {
"logo": {
"type": "string",
"format": "binary"
}
}
}
}
}
},
"responses": {
"201": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/organisation-profile/softdelete/{id}": {
"put": {
"tags": [
"organisation-profil-controller"
],
"summary": "Soft delete an existing entity",
"description": "Soft delete an entity using its ID",
"operationId": "softdelete_7",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/OrgProfileRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity Soft delete successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
}
}
}
},
"/api/intern/notification/{id}": {
"get": {
"tags": [
"notification-controller"
],
"summary": "Get an entity by ID",
"description": "Fetch an entity from the system using its ID",
"operationId": "getById_8",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "Entity found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/NotificationDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/NotificationDto"
}
}
}
}
}
},
"put": {
"tags": [
"notification-controller"
],
"summary": "Update an existing entity",
"description": "Update an entity using its ID",
"operationId": "update_8",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/NotificationDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity updated successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/NotificationDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/NotificationDto"
}
}
}
}
}
},
"delete": {
"tags": [
"notification-controller"
],
"summary": "Delete an entity by ID",
"description": "Delete an entity from the system using its ID",
"operationId": "deleteById_8",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"204": {
"description": "Entity deleted successfully"
},
"404": {
"description": "Entity not found"
}
}
}
},
"/api/intern/notification/softdelete/{id}": {
"put": {
"tags": [
"notification-controller"
],
"summary": "Soft delete an existing entity",
"description": "Soft delete an entity using its ID",
"operationId": "softdelete_8",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/NotificationDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity Soft delete successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/NotificationDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/NotificationDto"
}
}
}
}
}
}
},
"/api/intern/messages/{id}": {
"get": {
"tags": [
"message-controller"
],
"summary": "Get an entity by ID",
"description": "Fetch an entity from the system using its ID",
"operationId": "getById_9",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "Entity found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MessageDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MessageDto"
}
}
}
}
}
},
"put": {
"tags": [
"message-controller"
],
"summary": "Update an existing entity",
"description": "Update an entity using its ID",
"operationId": "update_9",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MessageRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity updated successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MessageDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MessageDto"
}
}
}
}
}
},
"delete": {
"tags": [
"message-controller"
],
"summary": "Delete an entity by ID",
"description": "Delete an entity from the system using its ID",
"operationId": "deleteById_9",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"204": {
"description": "Entity deleted successfully"
},
"404": {
"description": "Entity not found"
}
}
}
},
"/api/intern/messages/softdelete/{id}": {
"put": {
"tags": [
"message-controller"
],
"summary": "Soft delete an existing entity",
"description": "Soft delete an entity using its ID",
"operationId": "softdelete_9",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MessageRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity Soft delete successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MessageDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MessageDto"
}
}
}
}
}
}
},
"/api/intern/logs/{id}": {
"get": {
"tags": [
"log-controller"
],
"summary": "Get an entity by ID",
"description": "Fetch an entity from the system using its ID",
"operationId": "getById_10",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "Entity found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/LogDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/LogDto"
}
}
}
}
}
},
"put": {
"tags": [
"log-controller"
],
"summary": "Update an existing entity",
"description": "Update an entity using its ID",
"operationId": "update_10",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/LogRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity updated successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/LogDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/LogDto"
}
}
}
}
}
},
"delete": {
"tags": [
"log-controller"
],
"summary": "Delete an entity by ID",
"description": "Delete an entity from the system using its ID",
"operationId": "deleteById_10",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"204": {
"description": "Entity deleted successfully"
},
"404": {
"description": "Entity not found"
}
}
}
},
"/api/intern/logs/softdelete/{id}": {
"put": {
"tags": [
"log-controller"
],
"summary": "Soft delete an existing entity",
"description": "Soft delete an entity using its ID",
"operationId": "softdelete_10",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/LogRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity Soft delete successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/LogDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/LogDto"
}
}
}
}
}
}
},
"/api/intern/appProduct/{id}": {
"get": {
"tags": [
"applications-product-controller"
],
"summary": "Get an entity by ID",
"description": "Fetch an entity from the system using its ID",
"operationId": "getById_11",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "Entity found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
}
}
},
"put": {
"tags": [
"applications-product-controller"
],
"summary": "Update an existing entity",
"description": "Update an entity using its ID",
"operationId": "update_11",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/AppProductRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity updated successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
}
}
},
"delete": {
"tags": [
"applications-product-controller"
],
"summary": "Delete an entity by ID",
"description": "Delete an entity from the system using its ID",
"operationId": "deleteById_11",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"204": {
"description": "Entity deleted successfully"
},
"404": {
"description": "Entity not found"
}
}
}
},
"/api/intern/appProduct/withdrawalFromApp": {
"put": {
"tags": [
"applications-product-controller"
],
"summary": "withdrawal From App",
"operationId": "withdrawalFromApp",
"parameters": [
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"multipart/form-data": {
"schema": {
"type": "number"
}
}
}
},
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"type": "number"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/appProduct/update/{appId}": {
"put": {
"tags": [
"applications-product-controller"
],
"summary": "Add logo to application product",
"description": "Here you can Add logo to application product",
"operationId": "Add logo to application product",
"requestBody": {
"content": {
"multipart/form-data": {
"schema": {
"required": [
"appProduct",
"logo"
],
"type": "object",
"properties": {
"logo": {
"type": "string",
"format": "binary"
},
"appProduct": {
"$ref": "#/components/schemas/AppProductRequestDto"
}
}
}
}
}
},
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/appProduct/softdelete/{id}": {
"put": {
"tags": [
"applications-product-controller"
],
"summary": "Soft delete an existing entity",
"description": "Soft delete an entity using its ID",
"operationId": "softdelete_11",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/AppProductRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity Soft delete successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
}
}
}
},
"/api/intern/appProduct/generate-another-key": {
"put": {
"tags": [
"applications-product-controller"
],
"summary": "Generate another api key for Application Product ",
"description": "Here you can generate another apiKet for the Application Product of a User",
"operationId": "generate another key",
"parameters": [
{
"name": "apiId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/app-fees/{id}": {
"get": {
"tags": [
"application-fees-controller"
],
"summary": "Get an entity by ID",
"description": "Fetch an entity from the system using its ID",
"operationId": "getById_12",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "Entity found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationFeesDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationFeesDto"
}
}
}
}
}
},
"put": {
"tags": [
"application-fees-controller"
],
"summary": "Update an existing entity",
"description": "Update an entity using its ID",
"operationId": "update_12",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationFeesRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity updated successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationFeesDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationFeesDto"
}
}
}
}
}
},
"delete": {
"tags": [
"application-fees-controller"
],
"summary": "Delete an entity by ID",
"description": "Delete an entity from the system using its ID",
"operationId": "deleteById_12",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"204": {
"description": "Entity deleted successfully"
},
"404": {
"description": "Entity not found"
}
}
}
},
"/api/intern/app-fees/softdelete/{id}": {
"put": {
"tags": [
"application-fees-controller"
],
"summary": "Soft delete an existing entity",
"description": "Soft delete an entity using its ID",
"operationId": "softdelete_12",
"parameters": [
{
"name": "id",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationFeesRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Entity Soft delete successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationFeesDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationFeesDto"
}
}
}
}
}
}
},
"/public/updateTransaction": {
"post": {
"tags": [
"home-controller"
],
"operationId": "updateTransaction",
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/public/token": {
"post": {
"tags": [
"home-controller"
],
"summary": "authenticate user",
"description": "login and return a user",
"operationId": "login",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/LoginRequest"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Successfully Login",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TokenData"
}
}
}
},
"500": {
"description": "Internal server error",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TokenData"
}
}
}
}
}
}
},
"/public/sms": {
"post": {
"tags": [
"home-controller"
],
"summary": "Send SMS notification to a user",
"description": "Here you can send an SMS by providing the message and the receiver phone number",
"operationId": "sendSMSNotification",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SMSRequestDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SmsResponse"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/public/seed": {
"post": {
"tags": [
"home-controller"
],
"summary": "Get information about a transaction that is executed for disbursement",
"description": "Here you can get the information about a transaction that is executed",
"operationId": "getTransactionInfoDisBursement",
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/TransferResult"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/public/seedAppFees": {
"post": {
"tags": [
"home-controller"
],
"operationId": "seedAppFees",
"parameters": [
{
"name": "serviceType",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"OM_COLLECT",
"OM_DEPOSIT",
"MTN_DEPOSIT",
"MTN_COLLECT"
]
}
}
],
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/public/reset-password": {
"post": {
"tags": [
"home-controller"
],
"operationId": "resetPassword",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ResetPasswordRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/public/register": {
"post": {
"tags": [
"home-controller"
],
"operationId": "register",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserRegister"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object"
}
}
}
}
}
}
},
"/public/refresh_token": {
"post": {
"tags": [
"token-controller"
],
"operationId": "refreshToken",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TokenRefreshRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TokenData"
}
}
}
}
}
}
},
"/public/refresh-token": {
"post": {
"tags": [
"home-controller"
],
"operationId": "refreshToken_1",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TokenRefreshRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TokenData"
}
}
}
}
}
}
},
"/public/persona-check": {
"post": {
"tags": [
"home-controller"
],
"operationId": "personaCheck",
"parameters": [
{
"name": "persona-signature",
"in": "header",
"required": true,
"schema": {
"type": "string"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"type": "string"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/public/organisation-profile/create": {
"post": {
"tags": [
"home-controller"
],
"summary": "Create Organisation Profile",
"description": "Here you can create an organisation profile by passing profile parameters",
"operationId": "createOrganisationProfile",
"parameters": [
{
"name": "name",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "type",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "city",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "country",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "email",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "nui",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "rccm",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "userId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"required": [
"logo"
],
"type": "object",
"properties": {
"logo": {
"type": "string",
"format": "binary"
}
}
}
},
"multipart/form-data": {
"schema": {
"required": [
"logo"
],
"type": "object",
"properties": {
"logo": {
"type": "string",
"format": "binary"
}
}
}
}
}
},
"responses": {
"201": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/public/email": {
"post": {
"tags": [
"home-controller"
],
"summary": "Send email notification to a user",
"description": "Here you can send a mail by providing the message, subject, sender and the receiver email",
"operationId": "sendEmailNotification",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/EmailRequestDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "successful operation",
"content": {
"application/json": {}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/public/collect": {
"post": {
"tags": [
"home-controller"
],
"operationId": "collect",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MerchantRequestmppayRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MerchantPaymentResponse"
}
}
}
}
}
}
},
"/public/callback-remita-payment": {
"post": {
"tags": [
"home-controller"
],
"operationId": "mtnCkeckPayment",
"requestBody": {
"content": {
"application/json": {
"schema": {
"type": "string"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/public/callback-remita-deposit": {
"post": {
"tags": [
"home-controller"
],
"operationId": "mtnCkeckPaymentDeposit",
"requestBody": {
"content": {
"application/json": {
"schema": {
"type": "string"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/public/callback-remita-collect-ynote": {
"post": {
"tags": [
"home-controller"
],
"operationId": "yNoteCkeckPayment",
"requestBody": {
"content": {
"application/json": {
"schema": {
"type": "string"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/public/access_token": {
"post": {
"tags": [
"token-controller"
],
"summary": "authenticate user",
"description": "login and return a user",
"operationId": "login_1",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/LoginRequest"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Successfully Login",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TokenData"
}
}
}
},
"500": {
"description": "Internal server error",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TokenData"
}
}
}
}
}
}
},
"/api/v1/transaction/validateTransaction": {
"post": {
"tags": [
"transaction-publish-controller"
],
"summary": "Validate a particular transaction to charge user wallet ",
"operationId": "validateTransaction",
"parameters": [
{
"name": "checkerId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "transactionId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "payeeNote",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "apiKey",
"in": "header",
"schema": {
"type": "string"
}
},
{
"name": "apiId",
"in": "header",
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/v1/transaction/transaction-status": {
"post": {
"tags": [
"transaction-publish-controller"
],
"summary": "Check transaction status",
"operationId": "checkTransactionStatus",
"parameters": [
{
"name": "id",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "apiKey",
"in": "header",
"schema": {
"type": "string"
}
},
{
"name": "apiId",
"in": "header",
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/v1/transaction/rejectTransaction": {
"post": {
"tags": [
"transaction-publish-controller"
],
"summary": "reject a particular transaction  ",
"operationId": "rejectTransaction",
"parameters": [
{
"name": "checkerId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "transactionId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "reason",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "apiKey",
"in": "header",
"schema": {
"type": "string"
}
},
{
"name": "apiId",
"in": "header",
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/v1/transaction/deposit": {
"post": {
"tags": [
"transaction-publish-controller"
],
"summary": "deposit money to user account (Orange and MTN)",
"operationId": "deposit",
"parameters": [
{
"name": "apiKey",
"in": "header",
"schema": {
"type": "string"
}
},
{
"name": "apiId",
"in": "header",
"schema": {
"type": "string"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransferRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/CollectResponse"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/v1/transaction/collect": {
"post": {
"tags": [
"transaction-publish-controller"
],
"summary": "redraw money from user account (Orange and MTN)",
"operationId": "collect_1",
"parameters": [
{
"name": "apiKey",
"in": "header",
"schema": {
"type": "string"
}
},
{
"name": "apiId",
"in": "header",
"schema": {
"type": "string"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransferRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/users": {
"get": {
"tags": [
"user-controller"
],
"summary": "Get all entities",
"description": "Fetch all entities from the system",
"operationId": "getAll",
"responses": {
"200": {
"description": "Entities retrieved successfully",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/UserDto"
}
}
}
}
}
}
},
"post": {
"tags": [
"user-controller"
],
"summary": "Create a new entity",
"description": "Adds a new entity to the system",
"operationId": "create",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Entity created successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
},
"400": {
"description": "Invalid input data",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
}
}
}
},
"/api/intern/users/validate-user": {
"post": {
"tags": [
"user-controller"
],
"summary": "Validate user",
"description": "Validate user after registration",
"operationId": "validateUser",
"parameters": [
{
"name": "id",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "userStatus",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"ACTIVE",
"INITIALIZE",
"BLOCK"
]
}
}
],
"responses": {
"200": {
"description": "Successfully retrieve users",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
},
"500": {
"description": "Internal server error",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
}
}
}
},
"/api/intern/users/addCollaborator": {
"post": {
"tags": [
"user-controller"
],
"summary": "Add collaborator",
"description": "you can add collaborators",
"operationId": "addCollaborator",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserRegister"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "Successfully retrieve users",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
},
"500": {
"description": "Internal server error",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
}
}
}
},
"/api/intern/user-verification": {
"get": {
"tags": [
"user-verification-controller"
],
"summary": "Get all entities",
"description": "Fetch all entities from the system",
"operationId": "getAll_2",
"responses": {
"200": {
"description": "Entities retrieved successfully",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/UserVerificationDto"
}
}
}
}
}
}
},
"post": {
"tags": [
"user-verification-controller"
],
"summary": "Create a new entity",
"description": "Adds a new entity to the system",
"operationId": "create_1",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserVerificationRequestDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Entity created successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/UserVerificationDto"
}
}
}
},
"400": {
"description": "Invalid input data",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/UserVerificationDto"
}
}
}
}
}
}
},
"/api/intern/user-verification/create": {
"post": {
"tags": [
"user-verification-controller"
],
"summary": "Create User verification",
"description": "Here you can create an User verification",
"operationId": "createUserVerification",
"parameters": [
{
"name": "documentType",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"CNI",
"PASSPORT",
"DRIVER_LICENCE",
"SELFIE",
"GOVERNMENT_ID",
"PROOF_OF_ADDRESS",
"TAX_ID",
"RENTAL_AGREEMENT",
"BUSINESS_PROOF_OF_ADDRESS",
"BUSINESS_REGISTRATION",
"PERSONA_VERIFICATION",
"TAX_COMPLIANCE_CERTIFICATE",
"GOVERNMENT_BUSINESS_ID"
]
}
},
{
"name": "userId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"required": [
"file"
],
"type": "object",
"properties": {
"file": {
"type": "string",
"format": "binary"
}
}
}
},
"multipart/form-data": {
"schema": {
"required": [
"file"
],
"type": "object",
"properties": {
"file": {
"type": "string",
"format": "binary"
}
}
}
}
}
},
"responses": {
"201": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction": {
"get": {
"tags": [
"transaction-controller"
],
"summary": "Get all entities",
"description": "Fetch all entities from the system",
"operationId": "getAll_4",
"responses": {
"200": {
"description": "Entities retrieved successfully",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
}
}
}
},
"post": {
"tags": [
"transaction-controller"
],
"summary": "Create a new entity",
"description": "Adds a new entity to the system",
"operationId": "create_2",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionRequestDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Entity created successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
},
"400": {
"description": "Invalid input data",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
}
}
}
},
"/api/intern/transaction/validateTransaction": {
"post": {
"tags": [
"Transaction-controller"
],
"summary": "Validate a particular transaction to charge user wallet ",
"operationId": "validateTransaction_1",
"parameters": [
{
"name": "checkerId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "transactionId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "payeeNote",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/rejectTransaction": {
"post": {
"tags": [
"Transaction-controller"
],
"summary": "reject a particular transaction  ",
"operationId": "rejectTransaction_1",
"parameters": [
{
"name": "checkerId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "transactionId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "payeeNote",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getBalancedeposit": {
"post": {
"tags": [
"Transaction-controller"
],
"summary": "Get balance deposit money ",
"operationId": "getBalancedeposit",
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/deposit": {
"post": {
"tags": [
"Transaction-controller"
],
"summary": "deposit money from user account ",
"operationId": "deposit_1",
"parameters": [
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransferRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/CollectResponse"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/depositMultiple": {
"post": {
"tags": [
"Transaction-controller"
],
"summary": "deposit money from user account ",
"operationId": "deposit_2",
"parameters": [
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/TransferRequest"
}
}
}
},
"required": true
},
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/CollectResponse"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/collect": {
"post": {
"tags": [
"Transaction-controller"
],
"summary": "redraw money from user account ",
"operationId": "collect_2",
"parameters": [
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransferRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TransactionDto"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/tickets": {
"get": {
"tags": [
"ticket-controller"
],
"summary": "Get all entities",
"description": "Fetch all entities from the system",
"operationId": "getAll_6",
"responses": {
"200": {
"description": "Entities retrieved successfully",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/TicketDto"
}
}
}
}
}
}
},
"post": {
"tags": [
"ticket-controller"
],
"summary": "Create a new entity",
"description": "Adds a new entity to the system",
"operationId": "create_3",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TicketRequestDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Entity created successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/TicketDto"
}
}
}
},
"400": {
"description": "Invalid input data",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/TicketDto"
}
}
}
}
}
}
},
"/api/intern/system-fees": {
"get": {
"tags": [
"system-fees-controller"
],
"summary": "Get all entities",
"description": "Fetch all entities from the system",
"operationId": "getAll_8",
"responses": {
"200": {
"description": "Entities retrieved successfully",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SystemFeesDto"
}
}
}
}
}
}
},
"post": {
"tags": [
"system-fees-controller"
],
"summary": "Create a new entity",
"description": "Adds a new entity to the system",
"operationId": "create_4",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SystemFeesRequestDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Entity created successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/SystemFeesDto"
}
}
}
},
"400": {
"description": "Invalid input data",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/SystemFeesDto"
}
}
}
}
}
}
},
"/api/intern/requestOfWithdrawal": {
"get": {
"tags": [
"request-of-withdrawal-controller"
],
"summary": "Get all entities",
"description": "Fetch all entities from the system",
"operationId": "getAll_10",
"responses": {
"200": {
"description": "Entities retrieved successfully",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/RequestWithdrawalDto"
}
}
}
}
}
}
},
"post": {
"tags": [
"request-of-withdrawal-controller"
],
"summary": "Create a new entity",
"description": "Adds a new entity to the system",
"operationId": "create_5",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/RequestWithdrawalRequest"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Entity created successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/RequestWithdrawalDto"
}
}
}
},
"400": {
"description": "Invalid input data",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/RequestWithdrawalDto"
}
}
}
}
}
}
},
"/api/intern/proofOfTransfer": {
"get": {
"tags": [
"proof-of-transfer-controller"
],
"summary": "Get all entities",
"description": "Fetch all entities from the system",
"operationId": "getAll_12",
"responses": {
"200": {
"description": "Entities retrieved successfully",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ProofOfTransferDto"
}
}
}
}
}
}
},
"post": {
"tags": [
"proof-of-transfer-controller"
],
"summary": "Create a new entity",
"description": "Adds a new entity to the system",
"operationId": "create_6",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ProofOfTransferRequestDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Entity created successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/ProofOfTransferDto"
}
}
}
},
"400": {
"description": "Invalid input data",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/ProofOfTransferDto"
}
}
}
}
}
}
},
"/api/intern/proofOfTransfer/createWithFile": {
"post": {
"tags": [
"ProofOfTransfer"
],
"summary": "Create proof of transfer with file",
"operationId": "createWithFile",
"parameters": [
{
"name": "dateTimeTransfer",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "date-time"
}
},
{
"name": "bankFrom",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "proofBills",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "applicationProductId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "userId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "amount",
"in": "query",
"required": true,
"schema": {
"type": "number"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"required": [
"file"
],
"type": "object",
"properties": {
"file": {
"type": "string",
"format": "binary"
}
}
}
},
"multipart/form-data": {
"schema": {
"required": [
"file"
],
"type": "object",
"properties": {
"file": {
"type": "string",
"format": "binary"
}
}
}
}
}
},
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/Page"
}
}
}
}
}
}
}
},
"/api/intern/organisation-profile": {
"get": {
"tags": [
"organisation-profil-controller"
],
"summary": "Get all entities",
"description": "Fetch all entities from the system",
"operationId": "getAll_14",
"responses": {
"200": {
"description": "Entities retrieved successfully",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
}
}
}
},
"post": {
"tags": [
"organisation-profil-controller"
],
"summary": "Create a new entity",
"description": "Adds a new entity to the system",
"operationId": "create_7",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/OrgProfileRequestDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Entity created successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
},
"400": {
"description": "Invalid input data",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
}
}
}
},
"/api/intern/organisation-profile/create": {
"post": {
"tags": [
"organisation-profil-controller"
],
"summary": "Create Organisation Profile",
"description": "Here you can create an organisation profile by passing profile parameters",
"operationId": "createOrganisationProfile_1",
"parameters": [
{
"name": "name",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "type",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "city",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "country",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "email",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "nui",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "rccm",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "userId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"requestBody": {
"content": {
"application/json": {
"schema": {
"required": [
"logo"
],
"type": "object",
"properties": {
"logo": {
"type": "string",
"format": "binary"
}
}
}
},
"multipart/form-data": {
"schema": {
"required": [
"logo"
],
"type": "object",
"properties": {
"logo": {
"type": "string",
"format": "binary"
}
}
}
}
}
},
"responses": {
"201": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/notification": {
"get": {
"tags": [
"notification-controller"
],
"summary": "Get all entities",
"description": "Fetch all entities from the system",
"operationId": "getAll_16",
"responses": {
"200": {
"description": "Entities retrieved successfully",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/NotificationDto"
}
}
}
}
}
}
},
"post": {
"tags": [
"notification-controller"
],
"summary": "Create a new entity",
"description": "Adds a new entity to the system",
"operationId": "create_8",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/NotificationDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Entity created successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/NotificationDto"
}
}
}
},
"400": {
"description": "Invalid input data",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/NotificationDto"
}
}
}
}
}
}
},
"/api/intern/messages": {
"get": {
"tags": [
"message-controller"
],
"summary": "Get all entities",
"description": "Fetch all entities from the system",
"operationId": "getAll_18",
"responses": {
"200": {
"description": "Entities retrieved successfully",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/MessageDto"
}
}
}
}
}
}
},
"post": {
"tags": [
"message-controller"
],
"summary": "Create a new entity",
"description": "Adds a new entity to the system",
"operationId": "create_9",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MessageRequestDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Entity created successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/MessageDto"
}
}
}
},
"400": {
"description": "Invalid input data",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/MessageDto"
}
}
}
}
}
}
},
"/api/intern/logs": {
"get": {
"tags": [
"log-controller"
],
"summary": "Get all entities",
"description": "Fetch all entities from the system",
"operationId": "getAll_20",
"responses": {
"200": {
"description": "Entities retrieved successfully",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/LogDto"
}
}
}
}
}
}
},
"post": {
"tags": [
"log-controller"
],
"summary": "Create a new entity",
"description": "Adds a new entity to the system",
"operationId": "create_10",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/LogRequestDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Entity created successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/LogDto"
}
}
}
},
"400": {
"description": "Invalid input data",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/LogDto"
}
}
}
}
}
}
},
"/api/intern/appProduct": {
"get": {
"tags": [
"applications-product-controller"
],
"summary": "Get all entities",
"description": "Fetch all entities from the system",
"operationId": "getAll_22",
"responses": {
"200": {
"description": "Entities retrieved successfully",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
}
}
}
},
"post": {
"tags": [
"applications-product-controller"
],
"summary": "Create a new entity",
"description": "Adds a new entity to the system",
"operationId": "create_11",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/AppProductRequestDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Entity created successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
},
"400": {
"description": "Invalid input data",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
}
}
}
},
"/api/intern/appProduct/create": {
"post": {
"tags": [
"applications-product-controller"
],
"summary": "Add logo to application product",
"description": "Here you can Add logo to application product",
"operationId": "Add logo to application product_1",
"requestBody": {
"content": {
"multipart/form-data": {
"schema": {
"required": [
"appProduct",
"logo"
],
"type": "object",
"properties": {
"logo": {
"type": "string",
"format": "binary"
},
"appProduct": {
"$ref": "#/components/schemas/AppProductCreateRequest"
}
}
}
}
}
},
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/app-fees": {
"get": {
"tags": [
"application-fees-controller"
],
"summary": "Get all entities",
"description": "Fetch all entities from the system",
"operationId": "getAll_24",
"responses": {
"200": {
"description": "Entities retrieved successfully",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ApplicationFeesDto"
}
}
}
}
}
}
},
"post": {
"tags": [
"application-fees-controller"
],
"summary": "Create a new entity",
"description": "Adds a new entity to the system",
"operationId": "create_12",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ApplicationFeesRequestDto"
}
}
},
"required": true
},
"responses": {
"201": {
"description": "Entity created successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/ApplicationFeesDto"
}
}
}
},
"400": {
"description": "Invalid input data",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/ApplicationFeesDto"
}
}
}
}
}
}
},
"/api/intern/requestOfWithdrawal/changeStatusRequestOfWithdrawal": {
"patch": {
"tags": [
"request-of-withdrawal-controller"
],
"operationId": "validateProofTransfer",
"parameters": [
{
"name": "proofId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "status",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"COMPLETED",
"INITIALIZE",
"FAILED"
]
}
}
],
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/RequestWithdrawalDto"
}
}
}
}
}
}
},
"/api/intern/proofOfTransfer/changeStatusProofTransfer": {
"patch": {
"tags": [
"ProofOfTransfer"
],
"description": "validate ProofTransfer",
"operationId": "changeStatusProofTransfer",
"parameters": [
{
"name": "proofId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "status",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"COMPLETED",
"INITIALIZE",
"FAILED"
]
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/Page"
}
}
}
}
}
}
}
},
"/public/logout": {
"get": {
"tags": [
"home-controller"
],
"operationId": "logout",
"parameters": [
{
"name": "keycloakUserId",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/public/getPermenentLinkFile": {
"get": {
"tags": [
"home-controller"
],
"summary": "Get the link of a file",
"description": "Here you can get the link of a file",
"operationId": "getPermenentLinkFile",
"parameters": [
{
"name": "name",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"201": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"type": "string"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/public/findByEmail/{email}": {
"get": {
"tags": [
"home-controller"
],
"summary": "Send email notification to a user",
"description": "Here you can send a mail by providing the message, subject, sender and the receiver email",
"operationId": "sendEmailNotification_1",
"parameters": [
{
"name": "email",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"201": {
"description": "successful operation",
"content": {
"application/json": {}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/public/CheckYnoteTransaction": {
"get": {
"tags": [
"home-controller"
],
"operationId": "CheckYnoteTransaction",
"parameters": [
{
"name": "idMessage",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object"
}
}
}
}
}
}
},
"/api/v1/transaction/getTotalTransactionAmount": {
"get": {
"tags": [
"transaction-publish-controller"
],
"summary": "get Total Amount Of Transaction in plateforme",
"description": "Fetch Total Amount of All transaction",
"operationId": "getTotalTransactionAmount",
"parameters": [
{
"name": "apiKey",
"in": "header",
"schema": {
"type": "string"
}
},
{
"name": "apiId",
"in": "header",
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "number",
"format": "double"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/v1/transaction/getTotalAmountByStatus": {
"get": {
"tags": [
"transaction-publish-controller"
],
"summary": "get Total Amount Of Transaction iby Status",
"description": "Fetch Total Amount of transaction by status",
"operationId": "getTotalAmountByStatus",
"parameters": [
{
"name": "transactionStatus",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"PENDING_APPROVAL",
"PENDING",
"SUCCESS",
"FAILED"
]
}
},
{
"name": "apiKey",
"in": "header",
"schema": {
"type": "string"
}
},
{
"name": "apiId",
"in": "header",
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "number",
"format": "double"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/v1/transaction/getTotalAmountByApplicationProduct": {
"get": {
"tags": [
"transaction-publish-controller"
],
"summary": "get Total Amount Of a particular Application Product",
"description": "Fetch Total Amount of a particular Application Product",
"operationId": "getTotalAmountByApplicationProduct",
"parameters": [
{
"name": "apiKey",
"in": "header",
"schema": {
"type": "string"
}
},
{
"name": "apiId",
"in": "header",
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "number",
"format": "double"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/v1/transaction/getTotalAmountByApplicationProductAndDateRange": {
"get": {
"tags": [
"transaction-publish-controller"
],
"summary": "get Application Product Transaction Total Amount in a date range",
"description": "Fetch All transaction of a date Range",
"operationId": "getTotalAmountByApplicationProductAndDateRange",
"parameters": [
{
"name": "startDate",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "date"
}
},
{
"name": "endDate",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "date"
}
},
{
"name": "apiKey",
"in": "header",
"schema": {
"type": "string"
}
},
{
"name": "apiId",
"in": "header",
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/Page"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/v1/transaction/getByApplicationProduct": {
"get": {
"tags": [
"transaction-publish-controller"
],
"summary": "get Application Product Transaction",
"description": "Fetch All transaction of a Application Product",
"operationId": "getByApplicationProduct",
"parameters": [
{
"name": "page",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "size",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "apiKey",
"in": "header",
"schema": {
"type": "string"
}
},
{
"name": "apiId",
"in": "header",
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/Page"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/v1/transaction/getByApplicationProductAndStatus": {
"get": {
"tags": [
"transaction-publish-controller"
],
"summary": "get Application Product Transaction And Status",
"description": "Fetch All transaction of a particular status",
"operationId": "getByApplicationProductAndStatus",
"parameters": [
{
"name": "transactionStatus",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"PENDING_APPROVAL",
"PENDING",
"SUCCESS",
"FAILED"
]
}
},
{
"name": "page",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "size",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "apiKey",
"in": "header",
"schema": {
"type": "string"
}
},
{
"name": "apiId",
"in": "header",
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/Page"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/v1/transaction/getByApplicationProductAndPhoneReceiver": {
"get": {
"tags": [
"transaction-publish-controller"
],
"summary": "get Application Product Transaction And phone Number receiver",
"description": "Fetch All transaction of a particular receiver phone Number",
"operationId": "getByApplicationProductAndPhoneReceiver",
"parameters": [
{
"name": "phoneNumber",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "page",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "size",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "apiKey",
"in": "header",
"schema": {
"type": "string"
}
},
{
"name": "apiId",
"in": "header",
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/Page"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/users/getMobileMoneyClientInfo": {
"get": {
"tags": [
"user-controller"
],
"summary": "Get information of Mobile Money Client info",
"description": "Here you get the Mobile Money Client information",
"operationId": "getMobileMoneyClientInfo",
"parameters": [
{
"name": "phoneNumber",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/Balance"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/users/getCollaborator": {
"get": {
"tags": [
"user-controller"
],
"summary": "Get collaborator",
"description": "you can get collaborators",
"operationId": "getCollaborator",
"parameters": [
{
"name": "organisationId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "page",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "size",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/UserDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/users/findWithFilter": {
"get": {
"tags": [
"user-controller"
],
"summary": "Find all entity with filter",
"description": "Find all entity with filter and pagination",
"operationId": "findAllWithFilter",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
},
{
"name": "column",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "value",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "operator",
"in": "query",
"required": false,
"schema": {
"type": "string",
"default": "contains"
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageUserDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageUserDto"
}
}
}
}
}
}
},
"/api/intern/users/findByphoneNumber/{phone}": {
"get": {
"tags": [
"user-controller"
],
"summary": "Find by phone number",
"description": "get a use by his phone Number",
"operationId": "getByPhoneNumber",
"parameters": [
{
"name": "phone",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "Successfully retrieve users",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
},
"500": {
"description": "Internal server error",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
}
}
}
},
"/api/intern/users/findByUsernameOrEmail/{data}": {
"get": {
"tags": [
"user-controller"
],
"summary": "Find by email or username",
"description": "get a use by his email or Username",
"operationId": "getByUsernameOrEmail",
"parameters": [
{
"name": "data",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "Successfully retrieve users",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
},
"500": {
"description": "Internal server error",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/UserDto"
}
}
}
}
}
}
},
"/api/intern/users/count": {
"get": {
"tags": [
"user-controller"
],
"summary": "Count all existing entity",
"description": "Count all entity",
"operationId": "count",
"responses": {
"200": {
"description": "Entity Count successfully",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
},
"/api/intern/users/all": {
"get": {
"tags": [
"user-controller"
],
"summary": "Find all entity",
"description": "Find all entity with  pagination",
"operationId": "getAll_1",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageUserDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageUserDto"
}
}
}
}
}
}
},
"/api/intern/user-verification/getVerificationsUser": {
"get": {
"tags": [
"user-verification-controller"
],
"summary": "Get User's Verification",
"description": "Here you get all the User's verification",
"operationId": "getVerificationsUser",
"parameters": [
{
"name": "userId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"201": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/user-verification/findWithFilter": {
"get": {
"tags": [
"user-verification-controller"
],
"summary": "Find all entity with filter",
"description": "Find all entity with filter and pagination",
"operationId": "findAllWithFilter_1",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
},
{
"name": "column",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "value",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "operator",
"in": "query",
"required": false,
"schema": {
"type": "string",
"default": "contains"
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageUserVerificationDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageUserVerificationDto"
}
}
}
}
}
}
},
"/api/intern/user-verification/count": {
"get": {
"tags": [
"user-verification-controller"
],
"summary": "Count all existing entity",
"description": "Count all entity",
"operationId": "count_1",
"responses": {
"200": {
"description": "Entity Count successfully",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
},
"/api/intern/user-verification/all": {
"get": {
"tags": [
"user-verification-controller"
],
"summary": "Find all entity",
"description": "Find all entity with  pagination",
"operationId": "getAll_3",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageUserVerificationDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageUserVerificationDto"
}
}
}
}
}
}
},
"/api/intern/transaction/getTransactionInfoDisBursement": {
"get": {
"tags": [
"transaction-controller"
],
"summary": "Get information about a transaction that is executed for disbursement",
"description": "Here you can get the information about a transaction that is executed",
"operationId": "getTransactionInfoDisBursement_1",
"parameters": [
{
"name": "referenceId",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/TransferResult"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getTransactionInfoCollection": {
"get": {
"tags": [
"transaction-controller"
],
"summary": "Get information about a transaction that is executed for Payment",
"description": "Here you can get the information about a transaction that is executed",
"operationId": "getTransactionInfoCollection",
"parameters": [
{
"name": "referenceId",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/RequestToPayResult"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getTotalTransactionAmount": {
"get": {
"tags": [
"Transaction-controller"
],
"summary": "get Total Amount Of Transaction in plateforme",
"description": "Fetch Total Amount of All transaction",
"operationId": "getTotalTransactionAmount_1",
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "number",
"format": "double"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getTotalAmountByStatus": {
"get": {
"tags": [
"Transaction-controller"
],
"summary": "get Total Amount Of Transaction iby Status",
"description": "Fetch Total Amount of transaction by status",
"operationId": "getTotalAmountByStatus_1",
"parameters": [
{
"name": "transactionStatus",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"PENDING_APPROVAL",
"PENDING",
"SUCCESS",
"FAILED"
]
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "number",
"format": "double"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getTotalAmountByApplicationProduct": {
"get": {
"tags": [
"Transaction-controller"
],
"summary": "get Total Amount Of a particular Application Product",
"description": "Fetch Total Amount of a particular Application Product",
"operationId": "getTotalAmountByApplicationProduct_1",
"parameters": [
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "number",
"format": "double"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getTotalAmountByApplicationProductAndDateRange": {
"get": {
"tags": [
"Transaction-controller"
],
"summary": "get Application Product Transaction Total Amount in a date range",
"description": "Fetch All transaction of a date Range",
"operationId": "getTotalAmountByApplicationProductAndDateRange_1",
"parameters": [
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "startDate",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "date"
}
},
{
"name": "endDate",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "date"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/Page"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getMobileMoneyClientInfo": {
"get": {
"tags": [
"transaction-controller"
],
"summary": "Get information of Mobile Money Client info",
"description": "Here you get the Mobile Money Client information",
"operationId": "getMobileMoneyClientInfo_1",
"parameters": [
{
"name": "phoneNumber",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/Balance"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getByApplicationProduct": {
"get": {
"tags": [
"Transaction-controller"
],
"summary": "get Application Product Transaction",
"description": "Fetch All transaction of a Application Product",
"operationId": "getByApplicationProduct_1",
"parameters": [
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "page",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "size",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/Page"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getByApplicationProductAndStatus": {
"get": {
"tags": [
"Transaction-controller"
],
"summary": "get Application Product Transaction And Status",
"description": "Fetch All transaction of a particular status",
"operationId": "getByApplicationProductAndStatus_1",
"parameters": [
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "transactionStatus",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"PENDING_APPROVAL",
"PENDING",
"SUCCESS",
"FAILED"
]
}
},
{
"name": "page",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "size",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/Page"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getByApplicationProductAndPhoneReceiver": {
"get": {
"tags": [
"Transaction-controller"
],
"summary": "get Application Product Transaction And phone Number receiver",
"description": "Fetch All transaction of a particular receiver phone Number",
"operationId": "getByApplicationProductAndPhoneReceiver_1",
"parameters": [
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "phoneNumber",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "page",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "size",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/Page"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getBalanceOfDisbursementMtn": {
"get": {
"tags": [
"transaction-controller"
],
"summary": "Get the balance of our Mobile Money Disbursement",
"description": "Here you get the Mobile Money Balance of Disbursement MTN",
"operationId": "getBalanceOfDisbursement",
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/Balance"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getBalanceOfCollectionMtn": {
"get": {
"tags": [
"transaction-controller"
],
"summary": "Get the balance of our Mobile Money",
"description": "Here you get the Mobile Money Balance of Collection MTN",
"operationId": "getBalanceOfCollection",
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/Balance"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getBalanceMtnDisbursement": {
"get": {
"tags": [
"Transaction-controller"
],
"summary": "check the balance of the deposit account MTN",
"operationId": "getBalanceMtnDisbursement",
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/Balance"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/getBalanceMtnCollect": {
"get": {
"tags": [
"Transaction-controller"
],
"summary": "check the balance of the collect account MTN",
"operationId": "getBalanceMtnCollect",
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/Balance"
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/findWithFilter": {
"get": {
"tags": [
"transaction-controller"
],
"summary": "Find all entity with filter",
"description": "Find all entity with filter and pagination",
"operationId": "findAllWithFilter_2",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
},
{
"name": "column",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "value",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "operator",
"in": "query",
"required": false,
"schema": {
"type": "string",
"default": "contains"
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageTransactionDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageTransactionDto"
}
}
}
}
}
}
},
"/api/intern/transaction/count": {
"get": {
"tags": [
"transaction-controller"
],
"summary": "Count all existing entity",
"description": "Count all entity",
"operationId": "count_2",
"responses": {
"200": {
"description": "Entity Count successfully",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
},
"/api/intern/transaction/checkValidationOfDepositTransaction": {
"get": {
"tags": [
"Transaction-controller"
],
"summary": "check Validation Of  a particular deposit OM transaction  ",
"operationId": "checkValidationOfDepositTransaction",
"parameters": [
{
"name": "messageId",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/checkValidationOfCollectTransaction": {
"get": {
"tags": [
"Transaction-controller"
],
"summary": "check Validation Of  a particular Collect OM transaction  ",
"operationId": "checkValidationOfCollectTransaction",
"parameters": [
{
"name": "payToken",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/transaction/all": {
"get": {
"tags": [
"transaction-controller"
],
"summary": "Find all entity",
"description": "Find all entity with  pagination",
"operationId": "getAll_5",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageTransactionDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageTransactionDto"
}
}
}
}
}
}
},
"/api/intern/tickets/user": {
"get": {
"tags": [
"Ticket-controller"
],
"summary": "Fetch tickets by user",
"description": "Fetch tickets by user id",
"operationId": "fetchTicketByUser",
"parameters": [
{
"name": "cause",
"in": "query",
"description": "the cause of ticket",
"required": false,
"schema": {
"type": "string",
"enum": [
"FRAUD",
"TRANSACTION_FAIL",
"RECLAMATION",
"ISSUE_VERIFICATION"
]
}
},
{
"name": "size",
"in": "query",
"description": "the number of page",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "page",
"in": "query",
"description": "the page number",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/Page"
}
}
}
}
}
}
},
"/api/intern/tickets/status/{status}": {
"get": {
"tags": [
"Ticket-controller"
],
"summary": "Fetch tickets by status",
"description": "Fetch tickets by status",
"operationId": "fetchTicketByStatus",
"parameters": [
{
"name": "status",
"in": "path",
"description": "The status of ticket",
"required": true,
"schema": {
"type": "string",
"enum": [
"OPENED",
"CLOSED"
]
}
},
{
"name": "size",
"in": "query",
"description": "the number of page",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "page",
"in": "query",
"description": "the page number",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/Page"
}
}
}
}
}
}
},
"/api/intern/tickets/findWithFilter": {
"get": {
"tags": [
"ticket-controller"
],
"summary": "Find all entity with filter",
"description": "Find all entity with filter and pagination",
"operationId": "findAllWithFilter_3",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
},
{
"name": "column",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "value",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "operator",
"in": "query",
"required": false,
"schema": {
"type": "string",
"default": "contains"
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageTicketDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageTicketDto"
}
}
}
}
}
}
},
"/api/intern/tickets/count": {
"get": {
"tags": [
"ticket-controller"
],
"summary": "Count all existing entity",
"description": "Count all entity",
"operationId": "count_3",
"responses": {
"200": {
"description": "Entity Count successfully",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
},
"/api/intern/tickets/all": {
"get": {
"tags": [
"ticket-controller"
],
"summary": "Find all entity",
"description": "Find all entity with  pagination",
"operationId": "getAll_7",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageTicketDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageTicketDto"
}
}
}
}
}
}
},
"/api/intern/system-fees/systemfeesByType": {
"get": {
"tags": [
"SystemFees"
],
"summary": "Fetch System fees by service type",
"description": "FFetch System fees by service type",
"operationId": "getSystemFeesBySavingType",
"parameters": [],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SystemFeesDto"
}
}
}
}
}
}
},
"/api/intern/system-fees/findWithFilter": {
"get": {
"tags": [
"system-fees-controller"
],
"summary": "Find all entity with filter",
"description": "Find all entity with filter and pagination",
"operationId": "findAllWithFilter_4",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
},
{
"name": "column",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "value",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "operator",
"in": "query",
"required": false,
"schema": {
"type": "string",
"default": "contains"
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageSystemFeesDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageSystemFeesDto"
}
}
}
}
}
}
},
"/api/intern/system-fees/count": {
"get": {
"tags": [
"system-fees-controller"
],
"summary": "Count all existing entity",
"description": "Count all entity",
"operationId": "count_4",
"responses": {
"200": {
"description": "Entity Count successfully",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
},
"/api/intern/system-fees/all": {
"get": {
"tags": [
"system-fees-controller"
],
"summary": "Find all entity",
"description": "Find all entity with  pagination",
"operationId": "getAll_9",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageSystemFeesDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageSystemFeesDto"
}
}
}
}
}
}
},
"/api/intern/requestOfWithdrawal/getByUser": {
"get": {
"tags": [
"request-of-withdrawal-controller"
],
"operationId": "searchLogs",
"parameters": [
{
"name": "userId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "page",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "size",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
}
],
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageRequestWithdrawalDto"
}
}
}
}
}
}
},
"/api/intern/requestOfWithdrawal/getByApplication": {
"get": {
"tags": [
"request-of-withdrawal-controller"
],
"operationId": "getByApplication",
"parameters": [
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "page",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "size",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
}
],
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageRequestWithdrawalDto"
}
}
}
}
}
}
},
"/api/intern/requestOfWithdrawal/findWithFilter": {
"get": {
"tags": [
"request-of-withdrawal-controller"
],
"summary": "Find all entity with filter",
"description": "Find all entity with filter and pagination",
"operationId": "findAllWithFilter_5",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
},
{
"name": "column",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "value",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "operator",
"in": "query",
"required": false,
"schema": {
"type": "string",
"default": "contains"
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageRequestWithdrawalDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageRequestWithdrawalDto"
}
}
}
}
}
}
},
"/api/intern/requestOfWithdrawal/count": {
"get": {
"tags": [
"request-of-withdrawal-controller"
],
"summary": "Count all existing entity",
"description": "Count all entity",
"operationId": "count_5",
"responses": {
"200": {
"description": "Entity Count successfully",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
},
"/api/intern/requestOfWithdrawal/all": {
"get": {
"tags": [
"request-of-withdrawal-controller"
],
"summary": "Find all entity",
"description": "Find all entity with  pagination",
"operationId": "getAll_11",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageRequestWithdrawalDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageRequestWithdrawalDto"
}
}
}
}
}
}
},
"/api/intern/proofOfTransfer/getByUser": {
"get": {
"tags": [
"ProofOfTransfer"
],
"summary": "Search proof by client",
"description": "Search all proof by client",
"operationId": "getByUser",
"parameters": [
{
"name": "userId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "page",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "size",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/Page"
}
}
}
}
}
}
}
},
"/api/intern/proofOfTransfer/getByApplication": {
"get": {
"tags": [
"ProofOfTransfer"
],
"summary": "Search proof by application ",
"description": "Search all proof by application",
"operationId": "getByApplication_1",
"parameters": [
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "page",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "size",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/Page"
}
}
}
}
}
}
}
},
"/api/intern/proofOfTransfer/findWithFilter": {
"get": {
"tags": [
"proof-of-transfer-controller"
],
"summary": "Find all entity with filter",
"description": "Find all entity with filter and pagination",
"operationId": "findAllWithFilter_6",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
},
{
"name": "column",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "value",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "operator",
"in": "query",
"required": false,
"schema": {
"type": "string",
"default": "contains"
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageProofOfTransferDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageProofOfTransferDto"
}
}
}
}
}
}
},
"/api/intern/proofOfTransfer/count": {
"get": {
"tags": [
"proof-of-transfer-controller"
],
"summary": "Count all existing entity",
"description": "Count all entity",
"operationId": "count_6",
"responses": {
"200": {
"description": "Entity Count successfully",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
},
"/api/intern/proofOfTransfer/all": {
"get": {
"tags": [
"proof-of-transfer-controller"
],
"summary": "Find all entity",
"description": "Find all entity with  pagination",
"operationId": "getAll_13",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageProofOfTransferDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageProofOfTransferDto"
}
}
}
}
}
}
},
"/api/intern/organisation-profile/findWithFilter": {
"get": {
"tags": [
"organisation-profil-controller"
],
"summary": "Find all entity with filter",
"description": "Find all entity with filter and pagination",
"operationId": "findAllWithFilter_7",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
},
{
"name": "column",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "value",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "operator",
"in": "query",
"required": false,
"schema": {
"type": "string",
"default": "contains"
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageOrganisationProfilDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageOrganisationProfilDto"
}
}
}
}
}
}
},
"/api/intern/organisation-profile/count": {
"get": {
"tags": [
"organisation-profil-controller"
],
"summary": "Count all existing entity",
"description": "Count all entity",
"operationId": "count_7",
"responses": {
"200": {
"description": "Entity Count successfully",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
},
"/api/intern/organisation-profile/all": {
"get": {
"tags": [
"organisation-profil-controller"
],
"summary": "Find all entity",
"description": "Find all entity with  pagination",
"operationId": "getAll_15",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageOrganisationProfilDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageOrganisationProfilDto"
}
}
}
}
}
}
},
"/api/intern/notification/user/{user-id}": {
"get": {
"tags": [
"notification-controller"
],
"summary": "Fetch all notifications of specific user",
"description": "Fetch all notifications of specific user",
"operationId": "fetchNotificationsByUser",
"parameters": [
{
"name": "user-id",
"in": "path",
"description": "the user identifier",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/NotificationDto"
}
}
}
}
}
}
}
},
"/api/intern/notification/search": {
"get": {
"tags": [
"notification-controller"
],
"summary": "Search notifications by date filters",
"description": "Search notifications by date filters",
"operationId": "searchNotifications",
"parameters": [
{
"name": "is-read",
"in": "query",
"required": false,
"schema": {
"type": "boolean"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/NotificationDto"
}
}
}
}
}
}
}
},
"/api/intern/notification/findWithFilter": {
"get": {
"tags": [
"notification-controller"
],
"summary": "Find all entity with filter",
"description": "Find all entity with filter and pagination",
"operationId": "findAllWithFilter_8",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
},
{
"name": "column",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "value",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "operator",
"in": "query",
"required": false,
"schema": {
"type": "string",
"default": "contains"
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageNotificationDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageNotificationDto"
}
}
}
}
}
}
},
"/api/intern/notification/count": {
"get": {
"tags": [
"notification-controller"
],
"summary": "Count all existing entity",
"description": "Count all entity",
"operationId": "count_8",
"responses": {
"200": {
"description": "Entity Count successfully",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
},
"/api/intern/notification/all": {
"get": {
"tags": [
"notification-controller"
],
"summary": "Find all entity",
"description": "Find all entity with  pagination",
"operationId": "getAll_17",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageNotificationDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageNotificationDto"
}
}
}
}
}
}
},
"/api/intern/messages/ticket/{ticket-id}": {
"get": {
"tags": [
"message-controller"
],
"summary": "Fetch messages by ticket",
"description": "Fetch messages by ticket id",
"operationId": "fetchMessagesByTicket",
"parameters": [
{
"name": "ticket-id",
"in": "path",
"description": "the ticket identifier",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/MessageDto"
}
}
}
}
}
}
}
},
"/api/intern/messages/getMeesageByStatus": {
"get": {
"tags": [
"message-controller"
],
"operationId": "getMeesageByStatus",
"parameters": [
{
"name": "ticketId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "status",
"in": "query",
"required": true,
"schema": {
"type": "string",
"enum": [
"READ",
"UNREAD"
]
}
}
],
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "number"
}
}
}
}
}
}
},
"/api/intern/messages/findWithFilter": {
"get": {
"tags": [
"message-controller"
],
"summary": "Find all entity with filter",
"description": "Find all entity with filter and pagination",
"operationId": "findAllWithFilter_9",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
},
{
"name": "column",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "value",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "operator",
"in": "query",
"required": false,
"schema": {
"type": "string",
"default": "contains"
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageMessageDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageMessageDto"
}
}
}
}
}
}
},
"/api/intern/messages/count": {
"get": {
"tags": [
"message-controller"
],
"summary": "Count all existing entity",
"description": "Count all entity",
"operationId": "count_9",
"responses": {
"200": {
"description": "Entity Count successfully",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
},
"/api/intern/messages/all": {
"get": {
"tags": [
"message-controller"
],
"summary": "Find all entity",
"description": "Find all entity with  pagination",
"operationId": "getAll_19",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageMessageDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageMessageDto"
}
}
}
}
}
}
},
"/api/intern/logs/user": {
"get": {
"tags": [
"Log"
],
"summary": "Fetch all logs of specific user",
"description": "Fetch all logs of specific user",
"operationId": "fetchLogsByUser",
"parameters": [
{
"name": "page",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "size",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/LogDto"
}
}
}
}
}
}
}
},
"/api/intern/logs/search": {
"get": {
"tags": [
"Log"
],
"summary": "Search logs by date filters",
"description": "Search logs by date filters",
"operationId": "searchLogs_1",
"parameters": [
{
"name": "from",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "date-time"
}
},
{
"name": "to",
"in": "query",
"required": false,
"schema": {
"type": "string",
"format": "date-time"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/LogDto"
}
}
}
}
}
}
}
},
"/api/intern/logs/findWithFilter": {
"get": {
"tags": [
"log-controller"
],
"summary": "Find all entity with filter",
"description": "Find all entity with filter and pagination",
"operationId": "findAllWithFilter_10",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
},
{
"name": "column",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "value",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "operator",
"in": "query",
"required": false,
"schema": {
"type": "string",
"default": "contains"
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageLogDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageLogDto"
}
}
}
}
}
}
},
"/api/intern/logs/count": {
"get": {
"tags": [
"log-controller"
],
"summary": "Count all existing entity",
"description": "Count all entity",
"operationId": "count_10",
"responses": {
"200": {
"description": "Entity Count successfully",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
},
"/api/intern/logs/all": {
"get": {
"tags": [
"log-controller"
],
"summary": "Find all entity",
"description": "Find all entity with  pagination",
"operationId": "getAll_21",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageLogDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageLogDto"
}
}
}
}
}
}
},
"/api/intern/appProduct/user/{userId}": {
"get": {
"tags": [
"applications-product-controller"
],
"summary": "Get Application Product By User",
"description": "Here you can find the list of Application Product of a User providing the userId",
"operationId": "getAppProductByUser",
"parameters": [
{
"name": "userId",
"in": "path",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/appProduct/getByStatus": {
"get": {
"tags": [
"applications-product-controller"
],
"summary": "Get Application Product By Status",
"description": "Here you can find the list of Application Product of a User providing the status",
"operationId": "getAppProductByStatus",
"parameters": [
{
"name": "status",
"in": "query",
"required": true,
"schema": {
"type": "boolean"
}
},
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/appProduct/findWithFilter": {
"get": {
"tags": [
"applications-product-controller"
],
"summary": "Find all entity with filter",
"description": "Find all entity with filter and pagination",
"operationId": "findAllWithFilter_11",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
},
{
"name": "column",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "value",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "operator",
"in": "query",
"required": false,
"schema": {
"type": "string",
"default": "contains"
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageApplicationProductDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageApplicationProductDto"
}
}
}
}
}
}
},
"/api/intern/appProduct/count": {
"get": {
"tags": [
"applications-product-controller"
],
"summary": "Count all existing entity",
"description": "Count all entity",
"operationId": "count_11",
"responses": {
"200": {
"description": "Entity Count successfully",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
},
"/api/intern/appProduct/api-key": {
"get": {
"tags": [
"applications-product-controller"
],
"summary": "Get Application Product By API Key",
"description": "Here you can find the Application Product of a User providing an API key",
"operationId": "getAppProductByApp_key",
"parameters": [
{
"name": "appKey",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
}
}
}
},
"400": {
"description": "Bad request",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ResponseObject"
}
}
}
}
}
}
}
},
"/api/intern/appProduct/all": {
"get": {
"tags": [
"applications-product-controller"
],
"summary": "Find all entity",
"description": "Find all entity with  pagination",
"operationId": "getAll_23",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageApplicationProductDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageApplicationProductDto"
}
}
}
}
}
}
},
"/api/intern/app-fees/getBySavingType": {
"get": {
"tags": [
"application-fees-controller"
],
"summary": "Fetch Application fees by service type",
"description": "Fetch Application fees by service type",
"operationId": "getBySavingType",
"parameters": [],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SystemFeesDto"
}
}
}
}
}
}
},
"/api/intern/app-fees/getByApplicationProduct": {
"get": {
"tags": [
"application-fees-controller"
],
"summary": "Fetch Application fees by application product Id",
"operationId": "getByApplicationProduct_2",
"parameters": [
{
"name": "appId",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "uuid"
}
},
{
"name": "page",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
},
{
"name": "size",
"in": "query",
"required": true,
"schema": {
"type": "integer",
"format": "int32"
}
}
],
"responses": {
"200": {
"description": "successful operation",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SystemFeesDto"
}
}
}
}
}
}
},
"/api/intern/app-fees/findWithFilter": {
"get": {
"tags": [
"application-fees-controller"
],
"summary": "Find all entity with filter",
"description": "Find all entity with filter and pagination",
"operationId": "findAllWithFilter_12",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
},
{
"name": "column",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "value",
"in": "query",
"required": false,
"schema": {
"type": "string"
}
},
{
"name": "operator",
"in": "query",
"required": false,
"schema": {
"type": "string",
"default": "contains"
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageApplicationFeesDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"*/*": {
"schema": {
"$ref": "#/components/schemas/PageApplicationFeesDto"
}
}
}
}
}
}
},
"/api/intern/app-fees/count": {
"get": {
"tags": [
"application-fees-controller"
],
"summary": "Count all existing entity",
"description": "Count all entity",
"operationId": "count_12",
"responses": {
"200": {
"description": "Entity Count successfully",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
},
"/api/intern/app-fees/all": {
"get": {
"tags": [
"application-fees-controller"
],
"summary": "Find all entity",
"description": "Find all entity with  pagination",
"operationId": "getAll_25",
"parameters": [
{
"name": "page",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 10
}
}
],
"responses": {
"200": {
"description": "Entity fetch successfully",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageApplicationFeesDto"
}
}
}
},
"404": {
"description": "Entity not found",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageApplicationFeesDto"
}
}
}
}
}
}
}
},
"components": {
"schemas": {
"OrganisationDetail": {
"type": "object",
"properties": {
"organisationId": {
"type": "string",
"format": "uuid"
},
"name": {
"type": "string"
},
"type": {
"type": "string"
},
"city": {
"type": "string"
},
"country": {
"type": "string"
},
"email": {
"type": "string"
},
"logo": {
"type": "string"
}
}
},
"UserDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"email": {
"type": "string"
},
"fistName": {
"type": "string"
},
"lastName": {
"type": "string"
},
"phone": {
"type": "string"
},
"username": {
"type": "string"
},
"status": {
"type": "string",
"enum": [
"ACTIVE",
"INITIALIZE",
"BLOCK"
]
},
"country": {
"type": "string"
},
"city": {
"type": "string"
},
"structureName": {
"type": "string"
},
"roleType": {
"type": "string",
"enum": [
"CLIENT",
"DEV",
"MAKER",
"CHECKER",
"ADMIN"
]
},
"organisationProfileId": {
"type": "string",
"format": "uuid"
},
"organisationDetail": {
"$ref": "#/components/schemas/OrganisationDetail"
}
}
},
"UserVerificationRequestDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"fileName": {
"type": "string",
"format": "binary"
},
"documentType": {
"type": "string",
"enum": [
"CNI",
"PASSPORT",
"DRIVER_LICENCE",
"SELFIE",
"GOVERNMENT_ID",
"PROOF_OF_ADDRESS",
"TAX_ID",
"RENTAL_AGREEMENT",
"BUSINESS_PROOF_OF_ADDRESS",
"BUSINESS_REGISTRATION",
"PERSONA_VERIFICATION",
"TAX_COMPLIANCE_CERTIFICATE",
"GOVERNMENT_BUSINESS_ID"
]
},
"statusKycDocuments": {
"type": "string",
"enum": [
"PENDING_REVIEW",
"INVALID",
"APPROVED",
"RECEIVED_BACK"
]
},
"userId": {
"type": "string"
}
}
},
"UserDetailsResponse": {
"type": "object",
"properties": {
"userId": {
"type": "string",
"format": "uuid"
},
"phone": {
"type": "string"
},
"email": {
"type": "string"
},
"fistName": {
"type": "string"
},
"lastName": {
"type": "string"
},
"role": {
"type": "string",
"enum": [
"CLIENT",
"DEV",
"MAKER",
"CHECKER",
"ADMIN"
]
},
"organisationId": {
"type": "string",
"format": "uuid"
}
}
},
"UserVerificationDocumentDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"documentType": {
"type": "string",
"enum": [
"CNI",
"PASSPORT",
"DRIVER_LICENCE",
"SELFIE",
"GOVERNMENT_ID",
"PROOF_OF_ADDRESS",
"TAX_ID",
"RENTAL_AGREEMENT",
"BUSINESS_PROOF_OF_ADDRESS",
"BUSINESS_REGISTRATION",
"PERSONA_VERIFICATION",
"TAX_COMPLIANCE_CERTIFICATE",
"GOVERNMENT_BUSINESS_ID"
]
},
"statusKycDocuments": {
"type": "string",
"enum": [
"PENDING_REVIEW",
"INVALID",
"APPROVED",
"RECEIVED_BACK"
]
},
"fileName": {
"type": "string"
},
"userVerificationId": {
"type": "string",
"format": "uuid"
}
}
},
"UserVerificationDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"personaInqueryId": {
"type": "string"
},
"documents": {
"type": "array",
"items": {
"$ref": "#/components/schemas/UserVerificationDocumentDto"
}
},
"status": {
"type": "string",
"enum": [
"ACTIVE",
"INITIALIZE",
"BLOCK"
]
},
"personaVerificationStatus": {
"type": "string",
"enum": [
"APPROVED",
"COMPLETED",
"INITIALIZE",
"DECLINE",
"BLOCK"
]
},
"userId": {
"type": "string",
"format": "uuid"
},
"userDetails": {
"$ref": "#/components/schemas/UserDetailsResponse"
}
}
},
"OrganisationProfilDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"name": {
"type": "string"
},
"type": {
"type": "string"
},
"city": {
"type": "string"
},
"country": {
"type": "string"
},
"email": {
"type": "string"
},
"logo": {
"type": "string"
},
"niu": {
"type": "string"
},
"rccm": {
"type": "string"
},
"organCoreBankingId": {
"type": "string",
"format": "uuid"
},
"userId": {
"type": "string",
"format": "uuid"
},
"userDetails": {
"$ref": "#/components/schemas/UserDetailsResponse"
}
}
},
"ResponseObject": {
"type": "object"
},
"TransactionRequestDto": {
"required": [
"amount",
"checkerId",
"makerId",
"phoneReceiver",
"reason",
"receiverName",
"status",
"transferMethod"
],
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"amount": {
"type": "number",
"description": "the amount of the transaction"
},
"phoneReceiver": {
"type": "string",
"description": "the phone number of the recipient"
},
"transferMethod": {
"type": "string",
"description": "the method of transfer",
"enum": [
"OM",
"MOMO"
]
},
"receiverName": {
"type": "string",
"description": "The corresponding name of the holder account"
},
"reason": {
"type": "string",
"description": "the reason of the transaction rejection"
},
"makerId": {
"type": "string",
"description": "the id of the maker (user with ROLE MAKER)",
"format": "uuid"
},
"checkerId": {
"type": "string",
"description": "the id of the checker (user with ROLE CHECKER)",
"format": "uuid"
},
"status": {
"type": "string",
"description": "the Status of the transaction",
"enum": [
"PENDING_APPROVAL",
"PENDING",
"SUCCESS",
"FAILED"
]
},
"appId": {
"type": "string",
"format": "uuid"
}
}
},
"ApplicationProductDetail": {
"type": "object",
"properties": {
"name": {
"type": "string"
},
"appId": {
"type": "string",
"format": "uuid"
},
"description": {
"type": "string"
},
"logo": {
"type": "string"
},
"primaryColor": {
"type": "string"
},
"status": {
"type": "boolean"
},
"webhookDepositUrl": {
"type": "string"
},
"webhookCollectUrl": {
"type": "string"
}
}
},
"TransactionDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"amount": {
"type": "number"
},
"feesSystem": {
"type": "number"
},
"feesApp": {
"type": "number"
},
"phoneReceiver": {
"type": "string"
},
"receiverName": {
"type": "string"
},
"status": {
"type": "string",
"enum": [
"PENDING_APPROVAL",
"PENDING",
"SUCCESS",
"FAILED"
]
},
"transferMethod": {
"type": "string",
"enum": [
"OM",
"MOMO"
]
},
"reason": {
"type": "string"
},
"payToken": {
"type": "string"
},
"messageId": {
"type": "string"
},
"externalId": {
"type": "string"
},
"makerId": {
"type": "string",
"format": "uuid"
},
"checkerId": {
"type": "string",
"format": "uuid"
},
"applicationProductId": {
"type": "string",
"format": "uuid"
},
"makerDetails": {
"$ref": "#/components/schemas/UserDetailsResponse"
},
"checkerDetails": {
"$ref": "#/components/schemas/UserDetailsResponse"
},
"applicationProductDetail": {
"$ref": "#/components/schemas/ApplicationProductDetail"
}
}
},
"TicketRequestDto": {
"required": [
"cause",
"description",
"name",
"number",
"status",
"userId"
],
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"userId": {
"type": "string",
"description": "the id of the user that own's ticket",
"format": "uuid"
},
"status": {
"type": "string",
"description": "the ticket status",
"example": "Treated",
"enum": [
"OPENED",
"CLOSED"
]
},
"name": {
"type": "string",
"description": "the ticket name",
"example": "SCAM"
},
"description": {
"type": "string",
"description": "the ticket description"
},
"cause": {
"type": "string",
"description": "the ticket cause",
"example": "Fraud",
"enum": [
"FRAUD",
"TRANSACTION_FAIL",
"RECLAMATION",
"ISSUE_VERIFICATION"
]
},
"number": {
"type": "integer",
"description": "the ticket point",
"format": "int32",
"example": 3
}
}
},
"TicketDto": {
"required": [
"cause",
"description",
"name",
"number",
"status",
"userId"
],
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"userId": {
"type": "string",
"description": "the user that own's ticket",
"format": "uuid"
},
"status": {
"type": "string",
"description": "the ticket status",
"example": "Treated",
"enum": [
"OPENED",
"CLOSED"
]
},
"name": {
"type": "string",
"description": "the ticket name",
"example": "SCAM"
},
"description": {
"type": "string",
"description": "the ticket description"
},
"cause": {
"type": "string",
"description": "the ticket cause",
"example": "Fraud",
"enum": [
"FRAUD",
"TRANSACTION_FAIL",
"RECLAMATION",
"ISSUE_VERIFICATION"
]
},
"number": {
"type": "integer",
"description": "the ticket point",
"format": "int32",
"example": 3
},
"userDetails": {
"$ref": "#/components/schemas/UserDetailsResponse"
}
}
},
"SystemFeesRequestDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"percentage": {
"type": "number"
},
"serviceType": {
"type": "string",
"enum": [
"OM_COLLECT",
"OM_DEPOSIT",
"MTN_DEPOSIT",
"MTN_COLLECT"
]
}
}
},
"SystemFeesDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"percentage": {
"type": "number"
},
"serviceType": {
"type": "string",
"enum": [
"OM_COLLECT",
"OM_DEPOSIT",
"MTN_DEPOSIT",
"MTN_COLLECT"
]
}
}
},
"RequestWithdrawalRequest": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"bankFrom": {
"type": "string"
},
"accountNumber": {
"type": "string"
},
"amount": {
"type": "number"
},
"status": {
"type": "string",
"enum": [
"COMPLETED",
"INITIALIZE",
"FAILED"
]
},
"applicationProductId": {
"type": "string",
"format": "uuid"
},
"userId": {
"type": "string",
"format": "uuid"
}
}
},
"RequestWithdrawalDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"bankFrom": {
"type": "string"
},
"accountNumber": {
"type": "string"
},
"amount": {
"type": "number"
},
"status": {
"type": "string",
"enum": [
"COMPLETED",
"INITIALIZE",
"FAILED"
]
},
"applicationProductId": {
"type": "string",
"format": "uuid"
},
"userId": {
"type": "string",
"format": "uuid"
},
"applicationProductDetail": {
"$ref": "#/components/schemas/ApplicationProductDetail"
},
"userDetailsResponse": {
"$ref": "#/components/schemas/UserDetailsResponse"
}
}
},
"ProofOfTransferRequestDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"dateTimeTransfer": {
"type": "string",
"format": "date-time"
},
"bankFrom": {
"type": "string"
},
"proofBills": {
"type": "string"
},
"applicationProductId": {
"type": "string",
"format": "uuid"
},
"userId": {
"type": "string",
"format": "uuid"
},
"amount": {
"type": "number"
}
}
},
"ProofOfTransferDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"dateTimeTransfer": {
"type": "string",
"format": "date-time"
},
"bankFrom": {
"type": "string"
},
"proofBills": {
"type": "string"
},
"applicationProductId": {
"type": "string",
"format": "uuid"
},
"userId": {
"type": "string",
"format": "uuid"
},
"status": {
"type": "string",
"enum": [
"COMPLETED",
"INITIALIZE",
"FAILED"
]
},
"amount": {
"type": "number"
},
"userDetails": {
"$ref": "#/components/schemas/UserDetailsResponse"
},
"applicationProductDetail": {
"$ref": "#/components/schemas/ApplicationProductDetail"
}
}
},
"OrgProfileRequestDto": {
"required": [
"city",
"country",
"email",
"logo",
"name",
"niu",
"rccm",
"type",
"userId"
],
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"name": {
"type": "string",
"description": "the name"
},
"type": {
"type": "string",
"description": "the type"
},
"city": {
"type": "string",
"description": "the city"
},
"country": {
"type": "string",
"description": "the country"
},
"email": {
"type": "string",
"description": "the email"
},
"logo": {
"type": "string",
"format": "binary"
},
"niu": {
"type": "string",
"description": "the organisation NUI"
},
"rccm": {
"type": "string",
"description": "the organisation finance registry number"
},
"userId": {
"type": "string",
"description": "the user id"
}
}
},
"NotificationDto": {
"required": [
"fromEmail",
"fromId",
"message",
"subject",
"toEmail",
"toId",
"type"
],
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"fromEmail": {
"type": "string",
"description": "the sender",
"example": "5245243523452346"
},
"toEmail": {
"type": "string",
"description": "the user receiver email or phone number",
"example": "5245243523452346"
},
"fromId": {
"type": "string",
"description": "the sender",
"format": "uuid"
},
"toId": {
"type": "string",
"description": "the user receiver email or phone number",
"format": "uuid"
},
"subject": {
"type": "string",
"description": "the notification subject",
"example": "Info"
},
"message": {
"type": "string",
"description": "the notification content",
"example": "You account is ready"
},
"type": {
"type": "string",
"description": "if the notification is type",
"enum": [
"SMS",
"EMAIL"
]
},
"read": {
"type": "boolean"
}
}
},
"MessageRequestDto": {
"required": [
"content",
"fromId",
"ticketId",
"toId"
],
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"content": {
"type": "string",
"description": "the content of message",
"example": "I am sad"
},
"status": {
"type": "string",
"enum": [
"READ",
"UNREAD"
]
},
"fromId": {
"type": "string",
"description": "the user that write this message",
"format": "uuid"
},
"toId": {
"type": "string",
"description": "the user that write this message",
"format": "uuid"
},
"ticketId": {
"type": "string",
"description": "the ticket where the massage was write",
"format": "uuid"
}
}
},
"MessageDto": {
"required": [
"content",
"fromId",
"ticketId",
"toId"
],
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"content": {
"type": "string",
"description": "the content of message",
"example": "I am sad"
},
"messageStatus": {
"type": "string",
"enum": [
"READ",
"UNREAD"
]
},
"fromId": {
"type": "string",
"description": "the user that write this message",
"format": "uuid"
},
"toId": {
"type": "string",
"description": "the user that write this message",
"format": "uuid"
},
"ticketId": {
"type": "string",
"description": "the ticket where the massage was write",
"format": "uuid"
},
"fromDetails": {
"$ref": "#/components/schemas/UserDetailsResponse"
},
"toDetails": {
"$ref": "#/components/schemas/UserDetailsResponse"
}
}
},
"LogRequestDto": {
"required": [
"ipAddress",
"userId"
],
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"ipAddress": {
"type": "string",
"description": "the ip address of user connected",
"example": "0.0.0.0"
},
"userId": {
"type": "string",
"description": "the user id",
"format": "uuid"
}
}
},
"LogDto": {
"required": [
"ipAddress"
],
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"ipAddress": {
"type": "string",
"description": "the ip address of user connected",
"example": "0.0.0.0"
},
"userId": {
"type": "string",
"format": "uuid"
},
"userDetails": {
"$ref": "#/components/schemas/UserDetailsResponse"
}
}
},
"AppProductRequestDto": {
"required": [
"description",
"name"
],
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"name": {
"type": "string"
},
"appKey": {
"type": "string"
},
"description": {
"type": "string"
},
"balance": {
"type": "number"
},
"commission": {
"type": "number"
},
"status": {
"type": "boolean"
},
"logo": {
"type": "string"
},
"receiveMtnPhoneNumber": {
"type": "string"
},
"receiveOmPhoneNumber": {
"type": "string"
},
"webhoohDepositUrl": {
"type": "string"
},
"webhookCollectUrl": {
"type": "string"
},
"primatyColor": {
"type": "string"
},
"userId": {
"type": "string",
"format": "uuid"
}
}
},
"ApplicationProductDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"name": {
"type": "string"
},
"appKey": {
"type": "string"
},
"description": {
"type": "string"
},
"balance": {
"type": "number"
},
"commission": {
"type": "number"
},
"status": {
"type": "boolean"
},
"logo": {
"type": "string"
},
"primatyColor": {
"type": "string"
},
"receiveMtnPhoneNumber": {
"type": "string"
},
"receiveOmPhoneNumber": {
"type": "string"
},
"webhookDepositUrl": {
"type": "string"
},
"webhookCollectUrl": {
"type": "string"
},
"userId": {
"type": "string",
"format": "uuid"
},
"userDetails": {
"$ref": "#/components/schemas/UserDetailsResponse"
}
}
},
"ApplicationFeesRequestDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"percentage": {
"type": "number"
},
"serviceType": {
"type": "string",
"enum": [
"OM_COLLECT",
"OM_DEPOSIT",
"MTN_DEPOSIT",
"MTN_COLLECT"
]
},
"applicationId": {
"type": "string",
"format": "uuid"
}
}
},
"ApplicationFeesDto": {
"type": "object",
"properties": {
"id": {
"type": "string",
"format": "uuid"
},
"deleted": {
"type": "boolean"
},
"deletedOn": {
"type": "string",
"format": "date-time"
},
"created": {
"type": "string",
"format": "date-time"
},
"updated": {
"type": "string",
"format": "date-time"
},
"percentage": {
"type": "number"
},
"serviceType": {
"type": "string",
"enum": [
"OM_COLLECT",
"OM_DEPOSIT",
"MTN_DEPOSIT",
"MTN_COLLECT"
]
},
"applicationProductId": {
"type": "string",
"format": "uuid"
},
"applicationProductDetail": {
"$ref": "#/components/schemas/ApplicationProductDetail"
}
}
},
"LoginRequest": {
"required": [
"password",
"username"
],
"type": "object",
"properties": {
"username": {
"type": "string",
"description": "your login username that you provide when you create your account"
},
"password": {
"type": "string",
"description": "your password that you define when you create your account"
}
}
},
"TokenData": {
"type": "object",
"properties": {
"token": {
"type": "string"
},
"expiresIn": {
"type": "integer",
"format": "int64"
},
"refreshExpiresIn": {
"type": "integer",
"format": "int64"
},
"tokenType": {
"type": "string"
},
"refreshToken": {
"type": "string"
}
}
},
"MessageStatus": {
"type": "object",
"properties": {
"groupName": {
"type": "string"
},
"id": {
"type": "integer",
"format": "int32"
},
"groupId": {
"type": "integer",
"format": "int32"
},
"name": {
"type": "string"
},
"action": {
"type": "string"
},
"description": {
"type": "string"
}
}
},
"SmsResponse": {
"type": "object",
"properties": {
"bulkId": {
"type": "string"
},
"messages": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SmsResponseDetails"
}
}
}
},
"SmsResponseDetails": {
"type": "object",
"properties": {
"messageId": {
"type": "string"
},
"status": {
"$ref": "#/components/schemas/MessageStatus"
},
"to": {
"type": "string"
},
"smsCount": {
"type": "integer",
"format": "int32"
}
}
},
"SMSRequestDto": {
"required": [
"message",
"phone"
],
"type": "object",
"properties": {
"phone": {
"type": "string",
"description": "Receiver phone number"
},
"message": {
"type": "string",
"description": "the message to send"
}
}
},
"ErrorReason": {
"type": "object",
"properties": {
"code": {
"type": "string",
"enum": [
"PAYEE_NOT_FOUND",
"PAYER_NOT_FOUND",
"NOT_ALLOWED",
"NOT_ALLOWED_TARGET_ENVIRONMENT",
"INVALID_CALLBACK_URL_HOST",
"INVALID_CURRENCY",
"SERVICE_UNAVAILABLE",
"INTERNAL_PROCESSING_ERROR",
"NOT_ENOUGH_FUNDS",
"PAYER_LIMIT_REACHED",
"PAYEE_NOT_ALLOWED_TO_RECEIVE",
"PAYMENT_NOT_APPROVED",
"RESOURCE_NOT_FOUND",
"APPROVAL_REJECTED",
"EXPIRED",
"TRANSACTION_CANCELED",
"RESOURCE_ALREADY_EXIST"
]
},
"message": {
"type": "string"
}
}
},
"Party": {
"type": "object",
"properties": {
"partyIdType": {
"type": "string",
"enum": [
"MSISDN",
"EMAIL",
"PARTY_CODE"
]
},
"partyId": {
"type": "string"
}
}
},
"TransferResult": {
"type": "object",
"properties": {
"amount": {
"type": "string"
},
"currency": {
"type": "string"
},
"financialTransactionId": {
"type": "string"
},
"externalId": {
"type": "string"
},
"payee": {
"$ref": "#/components/schemas/Party"
},
"payerMessage": {
"type": "string"
},
"payeeNote": {
"type": "string"
},
"status": {
"type": "string",
"enum": [
"PENDING",
"SUCCESSFUL",
"FAILED"
]
},
"reason": {
"$ref": "#/components/schemas/ErrorReason"
}
}
},
"ResetPasswordRequest": {
"type": "object",
"properties": {
"newPassword": {
"type": "string"
},
"userId": {
"type": "string",
"format": "uuid"
}
}
},
"UserRegister": {
"required": [
"city",
"country",
"email",
"fistName",
"lastName",
"password",
"phone",
"role",
"username"
],
"type": "object",
"properties": {
"email": {
"type": "string"
},
"fistName": {
"type": "string"
},
"lastName": {
"type": "string"
},
"username": {
"type": "string"
},
"phone": {
"type": "string"
},
"password": {
"type": "string"
},
"country": {
"type": "string"
},
"city": {
"type": "string"
},
"role": {
"type": "string",
"enum": [
"CLIENT",
"DEV",
"MAKER",
"CHECKER",
"ADMIN"
]
},
"organisationProfileId": {
"type": "string",
"format": "uuid"
}
}
},
"TokenRefreshRequest": {
"type": "object",
"properties": {
"refreshToken": {
"type": "string"
}
}
},
"EmailRequestDto": {
"required": [
"from",
"message",
"subject",
"to"
],
"type": "object",
"properties": {
"from": {
"type": "string",
"description": "Sender email address"
},
"to": {
"type": "string",
"description": "Receiver email address"
},
"message": {
"type": "string",
"description": "the message to send"
},
"subject": {
"type": "string",
"description": "the mail subject text"
}
}
},
"MerchantRequestmppayRequest": {
"type": "object",
"properties": {
"notifUrl": {
"type": "string"
},
"channelUserMsisdn": {
"type": "string"
},
"amount": {
"type": "string"
},
"subscriberMsisdn": {
"type": "string"
},
"pin": {
"type": "string"
},
"orderId": {
"type": "string"
},
"description": {
"type": "string"
},
"payToken": {
"type": "string"
}
}
},
"JsonNullableString": {
"type": "object",
"properties": {
"present": {
"type": "boolean"
}
}
},
"MerchantPaymentResponse": {
"required": [
"data",
"message"
],
"type": "object",
"properties": {
"message": {
"type": "string"
},
"data": {
"$ref": "#/components/schemas/MerchantPaymentResponseData"
}
}
},
"MerchantPaymentResponseData": {
"type": "object",
"properties": {
"id": {
"type": "integer",
"format": "int32"
},
"createtime": {
"type": "string"
},
"subscriberMsisdn": {
"type": "string"
},
"amount": {
"type": "number"
},
"payToken": {
"type": "string"
},
"txnid": {
"type": "string"
},
"txnmode": {
"type": "string"
},
"inittxnmessage": {
"type": "string"
},
"inittxnstatus": {
"type": "string"
},
"confirmtxnstatus": {
"$ref": "#/components/schemas/JsonNullableString"
},
"confirmtxnmessage": {
"$ref": "#/components/schemas/JsonNullableString"
},
"status": {
"type": "string",
"enum": [
"PENDING",
"SUCCESSFULL",
"FAILED"
]
},
"notifUrl": {
"type": "string",
"format": "uri"
},
"description": {
"type": "string"
},
"channelUserMsisdn": {
"type": "string"
}
}
},
"CollectResponse": {
"type": "object",
"properties": {
"transferMethod": {
"type": "string",
"enum": [
"OM",
"MOMO"
]
},
"externalId": {
"type": "string"
},
"customerName": {
"type": "string"
},
"customerPhone": {
"type": "string"
},
"payToken": {
"type": "string"
},
"amount": {
"type": "number"
},
"transactionId": {
"type": "string",
"format": "uuid"
},
"feesSystem": {
"type": "number"
},
"feesApp": {
"type": "number"
},
"transactionStatus": {
"type": "string",
"enum": [
"PENDING_APPROVAL",
"PENDING",
"SUCCESS",
"FAILED"
]
}
}
},
"TransferRequest": {
"type": "object",
"properties": {
"transferMethod": {
"type": "string",
"enum": [
"OM",
"MOMO"
]
},
"customerName": {
"type": "string"
},
"externalId": {
"type": "string",
"format": "uuid"
},
"phoneNumber": {
"type": "string"
},
"amount": {
"type": "number"
},
"webhookUrl": {
"type": "string"
}
}
},
"Page": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"type": "object"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
},
"PageableObject": {
"type": "object",
"properties": {
"offset": {
"type": "integer",
"format": "int64"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"unpaged": {
"type": "boolean"
},
"paged": {
"type": "boolean"
},
"pageNumber": {
"type": "integer",
"format": "int32"
},
"pageSize": {
"type": "integer",
"format": "int32"
}
}
},
"SortObject": {
"type": "object",
"properties": {
"direction": {
"type": "string"
},
"nullHandling": {
"type": "string"
},
"ascending": {
"type": "boolean"
},
"property": {
"type": "string"
},
"ignoreCase": {
"type": "boolean"
}
}
},
"AppProductCreateRequest": {
"required": [
"description",
"name"
],
"type": "object",
"properties": {
"name": {
"type": "string"
},
"description": {
"type": "string"
},
"logo": {
"type": "string"
},
"receiveMtnPhoneNumber": {
"type": "string"
},
"receiveOmPhoneNumber": {
"type": "string"
},
"webhoohDepositUrl": {
"type": "string"
},
"webhookCollectUrl": {
"type": "string"
},
"primatyColor": {
"type": "string"
},
"userId": {
"type": "string",
"format": "uuid"
}
}
},
"Balance": {
"type": "object",
"properties": {
"availableBalance": {
"type": "string"
},
"currency": {
"type": "string"
}
}
},
"PageUserDto": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/UserDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
},
"PageUserVerificationDto": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/UserVerificationDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
},
"RequestToPayResult": {
"type": "object",
"properties": {
"financialTransactionId": {
"type": "string"
},
"externalId": {
"type": "string",
"format": "uuid"
},
"amount": {
"type": "string"
},
"currency": {
"type": "string"
},
"payer": {
"$ref": "#/components/schemas/RequestToPayResultPayer"
},
"payerMessage": {
"type": "string"
},
"payeeNote": {
"type": "string"
},
"status": {
"type": "string"
}
}
},
"RequestToPayResultPayer": {
"type": "object",
"properties": {
"partyIdType": {
"type": "string"
},
"partyId": {
"type": "string"
}
}
},
"PageTransactionDto": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/TransactionDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
},
"PageTicketDto": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/TicketDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
},
"PageSystemFeesDto": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SystemFeesDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
},
"PageRequestWithdrawalDto": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/RequestWithdrawalDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
},
"PageProofOfTransferDto": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ProofOfTransferDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
},
"PageOrganisationProfilDto": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/OrganisationProfilDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
},
"PageNotificationDto": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/NotificationDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
},
"PageMessageDto": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/MessageDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
},
"PageLogDto": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/LogDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
},
"PageApplicationProductDto": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ApplicationProductDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
},
"PageApplicationFeesDto": {
"type": "object",
"properties": {
"totalPages": {
"type": "integer",
"format": "int32"
},
"totalElements": {
"type": "integer",
"format": "int64"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ApplicationFeesDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"type": "array",
"items": {
"$ref": "#/components/schemas/SortObject"
}
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"empty": {
"type": "boolean"
}
}
}
},
"securitySchemes": {
"apiKey": {
"type": "apiKey",
"name": "apiKey",
"in": "header"
},
"apiId": {
"type": "apiKey",
"name": "apiId",
"in": "header"
}
}
}
}
